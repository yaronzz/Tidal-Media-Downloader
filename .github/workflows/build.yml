name: Build exe

on: [push, pull_request]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install dependencies
      shell: bash
      run: |
        pip3 install wheel
        pip3 install pyinstaller
        pip3 install PyQt5
        pip3 install -r requirements.txt --upgrade
      working-directory: TIDALDL-PY

    - name: Clean directory
      shell: bash
      run: |
        rm -rf dist
        rm -rf build 
        rm -rf tidal_dl.egg-info
        rm -rf tidal_gui.egg-info
        rm -rf MANIFEST.in
      working-directory: TIDALDL-PY

    - name: Build tidal-dl 
      run: |
        pyinstaller -F tidal_dl/__init__.py -n tidal-dl
      working-directory: TIDALDL-PY      

    # - name: Build tidal-gui-macOs
    #   shell: bash
    #   if: ${{ matrix.os == 'macos-latest' }}
    #   run: |
    #     cp -rf guiStatic.in MANIFEST.in
    #     pyinstaller -F tidal_gui/__init__.py -w -n tidal-gui
    #     cp -rf tidal_gui/resource dist/
    #   working-directory: TIDALDL-PY

    # - name: Build tidal-gui
    #   shell: bash
    #   if: ${{ matrix.os != 'macos-latest' }}
    #   run: |
    #     cp -rf guiStatic.in MANIFEST.in
    #     pyinstaller -D tidal_gui/__init__.py -w -n tidal-gui
    #   working-directory: TIDALDL-PY

    # - name: Gzip tidal-gui
    #   shell: bash
    #   if: ${{ matrix.os != 'macos-latest' }}
    #   run: |
    #     cp -rf ../tidal_gui/resource ./tidal-gui/
    #     tar -zcvf tidal-gui.tar.gz tidal-gui
    #     rm -rf tidal-gui
    #   working-directory: TIDALDL-PY/dist
      
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with: 
        name: tidal-dl-${{ runner.os }}
        path: |
          TIDALDL-PY/dist/*



